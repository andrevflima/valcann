{"ast":null,"code":"var _jsxFileName = \"/home/andrelima/projeto/valcann/valcann/src/components/servicos/listServices.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './list-service.css';\nimport InputMask from 'react-input-mask';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 1000\n  },\n  content: {\n    width: '80%',\n    maxWidth: '80vh',\n    minHeight: 'fit-content',\n    maxHeight: '90%',\n    margin: 'auto',\n    padding: '3vh',\n    borderRadius: '8px',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n  }\n};\nconst ListServicos = ({\n  products\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const navigate = useNavigate();\n  const handleContratar = e => {\n    e.preventDefault();\n    // Add your form validation logic here\n    navigate('/conclusao');\n  };\n  const openModal = product => {\n    setShowModal(true);\n    setSelectedProduct(product);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedProduct(null);\n  };\n  const openForm = product => {\n    setShowForm(true);\n    setSelectedProduct(product);\n  };\n  const closeForm = () => {\n    setShowForm(false);\n    setSelectedProduct(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-services\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ListServicos, \"i3Ya06H1nvUjr3aGlQccmc+tttA=\", false, function () {\n  return [useNavigate];\n});\n_c = ListServicos;\nexport default ListServicos;\nvar _c;\n$RefreshReg$(_c, \"ListServicos\");","map":{"version":3,"names":["React","useState","Modal","InputMask","useNavigate","jsxDEV","_jsxDEV","modalStyle","overlay","backgroundColor","zIndex","content","width","maxWidth","minHeight","maxHeight","margin","padding","borderRadius","boxShadow","ListServicos","products","_s","showModal","setShowModal","showForm","setShowForm","selectedProduct","setSelectedProduct","navigate","handleContratar","e","preventDefault","openModal","product","closeModal","openForm","closeForm","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andrelima/projeto/valcann/valcann/src/components/servicos/listServices.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './list-service.css';\nimport InputMask from 'react-input-mask';\nimport { useNavigate } from 'react-router-dom';\n\nconst modalStyle = {\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 1000,\n  },\n  content: {\n    width: '80%',\n    maxWidth: '80vh',\n    minHeight: 'fit-content',\n    maxHeight: '90%',\n    margin: 'auto',\n    padding: '3vh',\n    borderRadius: '8px',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)',\n  },\n};\n\nconst ListServicos = ({ products }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  const navigate = useNavigate();\n\n  const handleContratar = (e) => {\n    e.preventDefault();\n    // Add your form validation logic here\n    navigate('/conclusao');\n  };\n\n  const openModal = (product) => {\n    setShowModal(true);\n    setSelectedProduct(product);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedProduct(null);\n  };\n\n  const openForm = (product) => {\n    setShowForm(true);\n    setSelectedProduct(product);\n  };\n\n  const closeForm = () => {\n    setShowForm(false);\n    setSelectedProduct(null);\n  };\n\n  return (\n    <div className='list-services'>\n      {/* Your JSX code here */}\n    </div>\n  );\n};\n\nexport default ListServicos;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,oBAAoB;AAC3B,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAG;EACjBC,OAAO,EAAE;IACPC,eAAe,EAAE,oBAAoB;IACrCC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;IACPC,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,aAAa;IACxBC,SAAS,EAAE,KAAK;IAChBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,KAAK;IACdC,YAAY,EAAE,KAAK;IACnBC,SAAS,EAAE;EACb;AACF,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM4B,QAAQ,GAAGzB,WAAW,CAAC,CAAC;EAE9B,MAAM0B,eAAe,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAH,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC;EAED,MAAMI,SAAS,GAAIC,OAAO,IAAK;IAC7BV,YAAY,CAAC,IAAI,CAAC;IAClBI,kBAAkB,CAACM,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBX,YAAY,CAAC,KAAK,CAAC;IACnBI,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMQ,QAAQ,GAAIF,OAAO,IAAK;IAC5BR,WAAW,CAAC,IAAI,CAAC;IACjBE,kBAAkB,CAACM,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtBX,WAAW,CAAC,KAAK,CAAC;IAClBE,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACEtB,OAAA;IAAKgC,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV,CAAC;AAACpB,EAAA,CAtCIF,YAAY;EAAA,QAKChB,WAAW;AAAA;AAAAuC,EAAA,GALxBvB,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}